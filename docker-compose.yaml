services:

  search-service:
    #    image: search-service:latest
    build:
      context: .
      args:
        DOCKER_BUILDKIT: 1
    restart: "no"
    ports:
      - "8081:8081"
    depends_on:
      elastic:
        condition: service_healthy
      db:
        condition: service_healthy
    #      - kibana
    networks:
      - network

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    container_name: elastic
    environment:
      - discovery.type=single-node
      ##    - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - ES_JAVA_OPTS=-Xmx2g -Xms2g
      - ELASTIC_PASSWORD=fusion
      - cluster.routing.allocation.disk.threshold_enabled=false
    ports:
      - "9200:9200"
    healthcheck:
      test: curl -s http://elastic:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 100s
      retries: 50
    networks:
      - network

  #  kibana:
  #    container_name: kibana
  #    image: kibana:8.17.1
  #    volumes:
  #      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
  #    ports:
  #      - "5601:5601"
  #    networks:
  #      - network

  db:
    image: postgres:17.2
    container_name: postgres-db
    restart: "no"
    ports:
      - "5432:5432"
    volumes:
      - search_service_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: egor
      POSTGRES_PASSWORD: fusion
      POSTGRES_DB: search-service-db
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    networks:
      - network

volumes:
  search_service_data:
#  kafka_data:
networks:
  network:
    name: test-network
    external: false
